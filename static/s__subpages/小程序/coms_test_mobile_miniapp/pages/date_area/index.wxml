<!--pages/date_area/index.wxml-->
<van-area area-list="{{ areaList }}" value='{{areavalue}}' bind:cancel='hidearea' bind:confirm='showarea' />

<!-- 自带的普通的和多列普通的选择器 -->
<picker mode='selector' range='{{["000","111"]}}'>普通选择</picker>
<picker mode='multiSelector' range='{{[["000","111"],["222","333"]]}}'>多列选择</picker>

<!--  
  value="110101" 代表选中
  columns-num="{{ 2 }}" 配置显示多少列
  columns-placeholder="{{ ['请选择', '请选择', '请选择'] }}" 前一列没选择，后一列可以做到先隐藏起来
  title 标题
  //
  loading	是否显示加载状态	boolean	false	-
  item-height	选项高度	number	44	-
  visible-item-count	可见的选项个数	number	5	-
  confirm-button-text	确认按钮文字	string	确认	-
  cancel-button-text	取消按钮文字	string	取消	-
-->
<!-- 
  日期时间
  //选择完整时间
  <van-datetime-picker
    type="datetime"
    value="{{ currentDate }}"
    min-date="{{ minDate }}"
    max-date="{{ maxDate }}"
    bind:input="onInput"
  />
  Page({
    data: {
      minHour: 10,
      maxHour: 20,
      minDate: new Date().getTime(),
      maxDate: new Date(2019, 10, 1).getTime(),
      currentDate: new Date().getTime(),
    },

    onInput(event) {
      this.setData({
        currentDate: event.detail,
      });
    },
  });
  //只选年月日
  <van-datetime-picker
    type="date"
    value="{{ currentDate }}"
    bind:input="onInput"
    min-date="{{ minDate }}"
    formatter="{{ formatter }}"
  />
  Page({
    data: {
      currentDate: new Date().getTime(),
      minDate: new Date().getTime(),
      formatter(type, value) {
        if (type === 'year') {
          return `${value}年`;
        } else if (type === 'month') {
          return `${value}月`;
        }
        return value;
      },
    },

    onInput(event) {
      this.setData({
        currentDate: event.detail,
      });
    },
  });
  //只选年月
  <van-datetime-picker
    type="year-month"
    value="{{ currentDate }}"
    min-date="{{ minDate }}"
    bind:input="onInput"
  />
  Page({
    data: {
      currentDate: new Date().getTime(),
      minDate: new Date().getTime(),
    },

    onInput(event) {
      this.setData({
        currentDate: event.detail,
      });
    },
  });
  //只选时间
  <van-datetime-picker
    type="time"
    value="{{ currentDate }}"
    min-hour="{{ minHour }}"
    max-hour="{{ maxHour }}"
    bind:input="onInput"
  />
  Page({
    data: {
      currentDate: '12:00',
      minHour: 10,
      maxHour: 20,
    },

    onInput(event) {
      this.setData({
        currentDate: event.detail,
      });
    },
  });
  通过过滤器调整间隔
  <van-datetime-picker
    type="time"
    value="{{ currentDate }}"
    filter="{{ filter }}"
  />
  Page({
    data: {
      currentDate: '12:00',
      filter(type, options) {
        if (type === 'minute') {
          return options.filter((option) => option % 5 === 0);
        }

        return options;
      },
    },
  });
  //一些另外的属性事件
  属性
  active-class	选中项样式类
  toolbar-class	顶部栏样式类
  column-class	列样式类//
  formatter	选项格式化函数	(type, value) => value	-	-
  title	顶部栏标题	string	''	-
  show-toolbar	是否显示顶部栏	boolean	true	-
  loading	是否显示加载状态	boolean	false	-
  item-height	选项高度	number	44	-
  confirm-button-text	确认按钮文字	string	确认	-
  cancel-button-text	取消按钮文字	string	取消	-
  visible-item-count	可见的选项个数	number	5	-
  事件
  input	当值变化时触发的事件	当前 value
  change	当值变化时触发的事件	组件实例
  confirm	点击完成按钮时触发的事件	当前 value
  cancel	点击取消按钮时触发的事件	-
 -->